How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    If one version works and the other doesn´t, the bug must be a difference.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could show me things that should have been made in different order to optimize.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: I know when my version is saved and decide when it happens.
    Con: Relying on a human memory might be too optimistic.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because for some tasks you need to compare changes made to multiple related files, but for others files change independently.

How can you use the commands git log and git diff to view the history of files?

    Git log shows all your commits in chronological order and git diff allows you to compare them two by two.

How might using version control make you more confident to make changes that
could break something?

    I can always go back to a working state, and compare that state with the broken one to see what could´ve gone wrong.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here